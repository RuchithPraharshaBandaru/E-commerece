<body>
    <div class="bg-green-100 p-4">
      <div class="max-w-4xl mx-auto bg-white p-6 rounded-lg shadow-lg">
        <h2 class="text-3xl font-bold text-green-700 mb-6">Checkout</h2>
  
        <!-- Tab Navigation -->
        <div class="flex border-b border-green-200 mb-6" role="tablist">
          <button id="cart-tab" class="tab-button px-4 py-2 text-green-700 font-semibold border-b-2 border-green-500" role="tab">Cart</button>
          <button id="address-tab" class="tab-button px-4 py-2 text-green-500 font-semibold" role="tab">Address</button>
          <button id="summary-tab" class="tab-button px-4 py-2 text-green-500 font-semibold" role="tab">Summary</button>
        </div>
  
        <!-- Cart Content -->
        <div id="cart-content" class="tab-content">
          <h3 class="text-lg font-semibold text-green-700 mb-4">Your Cart</h3>
          <div class="bg-green-50 p-4 rounded-lg shadow">
            <% user.cart.map((e) => { %>
            <div class="border-b pb-2 mb-2">
              <div class="flex justify-between items-center">
                <img src="<%= e.productId.image %>" alt="Product" class="w-12 h-12 rounded" />
                <div class="flex-1 ml-3 text-xs">
                  <p class="font-medium"><%= e.productId.title %></p>
                  <p class="text-sm text-gray-500">Rs <%= e.productId.price %> x <%= e.quantity %></p>
                </div>
                <p class="font-medium">Rs <%= e.productId.price * e.quantity %></p>
              </div>
            </div>
            <% }) %>
            <div class="flex justify-between font-bold text-lg text-green-700">
              <p>Total:</p>
              <p>Rs <%= total %></p>
            </div>
          </div>
          <div class="mt-4 text-right">
            <button id="to-address" class="bg-green-600 text-white py-2 px-6 rounded-lg font-semibold hover:bg-green-700 transition">Proceed to Address</button>
          </div>
        </div>
  
        <!-- Address Content -->
        <div id="address-content" class="tab-content hidden">
          <h3 class="text-lg font-semibold text-green-700 mb-4">Billing Address</h3>
          <div id="address-view">
            <p class="p-2 border rounded mb-2" id="address">
              <%= user.Address.plotno %>, <%= user.Address.street %>, <%= user.Address.city %>, <%= user.Address.state %> - <%= user.Address.pincode %>
            </p>
            <p class="p-2 border rounded mb-2" id="phone">Phone: <%= user.Address.phone %></p>
            <button id="edit-address" class="bg-blue-500 text-white py-1 px-3 rounded hover:bg-blue-600">Edit</button>
          </div>
          <div id="address-edit" class="hidden">
            <input id="plotno" value="<%= user.Address.plotno %>" class="w-full p-2 mb-2 border rounded" required />
            <input id="street" value="<%= user.Address.street %>" class="w-full p-2 mb-2 border rounded" required />
            <input id="city" value="<%= user.Address.city %>" class="w-full p-2 mb-2 border rounded" required />
            <input id="state" value="<%= user.Address.state %>" class="w-full p-2 mb-2 border rounded" required />
            <input id="pincode" value="<%= user.Address.pincode %>" class="w-full p-2 mb-2 border rounded" required pattern="\d{6}" />
            <input id="phone-input" value="<%= user.Address.phone %>" class="w-full p-2 mb-2 border rounded" required pattern="\d{10}" placeholder="Phone Number" />
            <button id="save-address" class="bg-green-500 text-white py-1 px-3 rounded hover:bg-green-600">Save</button>
          </div>
          <div class="mt-4 flex justify-between">
            <button id="back-to-cart" class="bg-gray-500 text-white py-2 px-6 rounded-lg font-semibold hover:bg-gray-600 transition">Back to Cart</button>
            <button id="to-summary" class="bg-green-600 text-white py-2 px-6 rounded-lg font-semibold hover:bg-green-700 transition">Proceed to Summary</button>
          </div>
        </div>
  
        <!-- Summary Content -->
        <div id="summary-content" class="tab-content hidden">
          <h3 class="text-lg font-semibold text-green-700 mb-4">Order Summary</h3>
          <div class="grid md:grid-cols-2 gap-6">
            <!-- Cart Summary -->
            <div class="bg-green-50 p-4 rounded-lg shadow">
              <% user.cart.map((e) => { %>
              <div class="border-b pb-2 mb-2">
                <div class="flex justify-between items-center">
                  <img src="<%= e.productId.image %>" alt="Product" class="w-12 h-12 rounded" />
                  <div class="flex-1 ml-3 text-xs">
                    <p class="font-medium"><%= e.productId.title %></p>
                    <p class="text-sm text-gray-500">Rs <%= e.productId.price %> x <%= e.quantity %></p>
                  </div>
                  <p class="font-medium">Rs <%= e.productId.price * e.quantity %></p>
                </div>
              </div>
              <% }) %>
              <div class="flex justify-between font-bold text-lg text-green-700">
                <p>Total:</p>
                <p>Rs <%= total %></p>
              </div>
            </div>
            <!-- User Details -->
            <div>
              <h4 class="text-md font-semibold text-green-700 mb-2">User Details</h4>
              <div class="w-full p-2 mb-2 border rounded"><%= user.firstname %> <%= user.lastname %></div>
              <div class="w-full p-2 mb-2 border rounded"><%= user.email %></div>
              <div class="w-full p-2 mb-2 border rounded"><%= user.Address.phone %></div>
            </div>
          </div>
  
          <!-- Shipping Address -->
          <div class="mt-6">
            <h4 class="text-md font-semibold text-green-700 mb-2">Shipping Address</h4>
            <p class="p-2 border rounded mb-2" id="summary-address">
              <%= user.Address.plotno %>, <%= user.Address.street %>, <%= user.Address.city %>, <%= user.Address.state %> - <%= user.Address.pincode %>
            </p>
          </div>
  
          <!-- Navigation -->
          <div class="mt-6 flex justify-between">
            <button id="back-to-address" class="bg-gray-500 text-white py-2 px-6 rounded-lg font-semibold hover:bg-gray-600 transition">Back to Address</button>
            <button id="place-order" class="bg-green-600 text-white py-2 px-6 rounded-lg font-semibold hover:bg-green-700 transition">Pay</button>
          </div>
        </div>
      </div>
  
      <!-- Script -->
      <script>
        const tabButtons = document.querySelectorAll('.tab-button');
        const tabContents = document.querySelectorAll('.tab-content');
  
        tabButtons.forEach((btn, i) => {
          btn.addEventListener('click', () => {
            tabButtons.forEach(b => b.classList.remove('text-green-700', 'border-green-500', 'border-b-2'));
            tabContents.forEach(tc => tc.classList.add('hidden'));
  
            btn.classList.add('text-green-700', 'border-green-500', 'border-b-2');
            tabContents[i].classList.remove('hidden');
          });
        });
  
        const validateAddress = () => {
          const editing = !document.getElementById('address-edit').classList.contains('hidden');
          if (editing) {
            const fields = ['plotno', 'street', 'city', 'state', 'pincode', 'phone-input'];
            for (const id of fields) {
              if (!document.getElementById(id).value.trim()) return false;
            }
            return /^\d{6}$/.test(document.getElementById('pincode').value) && /^\d{10}$/.test(document.getElementById('phone-input').value);
          } else {
            return document.getElementById('address').innerText.trim() !== '' && document.getElementById('phone').innerText.includes('Phone:');
          }
        };
  
        document.getElementById('save-address').addEventListener('click', () => {
          if (!validateAddress()) return alert('Please fill all fields correctly.');
  
          const plotno = document.getElementById('plotno').value.trim();
          const street = document.getElementById('street').value.trim();
          const city = document.getElementById('city').value.trim();
          const state = document.getElementById('state').value.trim();
          const pincode = document.getElementById('pincode').value.trim();
          const phone = document.getElementById('phone-input').value.trim();
  
          const formatted = `${plotno}, ${street}, ${city}, ${state} - ${pincode}`;
          document.getElementById('address').innerText = formatted;
          document.getElementById('summary-address').innerText = formatted;
          document.getElementById('phone').innerText = `Phone: ${phone}`;
  
          document.getElementById('address-view').classList.remove('hidden');
          document.getElementById('address-edit').classList.add('hidden');
        });
  
        document.getElementById('edit-address').addEventListener('click', () => {
          document.getElementById('address-view').classList.add('hidden');
          document.getElementById('address-edit').classList.remove('hidden');
        });
  
        document.getElementById('to-address').addEventListener('click', () => tabButtons[1].click());
        document.getElementById('back-to-cart').addEventListener('click', () => tabButtons[0].click());
        document.getElementById('to-summary').addEventListener('click', () => {
          if (!validateAddress()) return alert('Please complete your address before proceeding.');
          tabButtons[2].click();
        });
        document.getElementById('back-to-address').addEventListener('click', () => tabButtons[1].click());
  
        document.getElementById('place-order').addEventListener('click', async () => {
          if (!validateAddress()) return alert('Please ensure all address fields are filled before placing the order.');
  
          let address = {};
          const editing = !document.getElementById('address-edit').classList.contains('hidden');
          if (editing) {
            address = {
              plotno: document.getElementById('plotno').value.trim(),
              street: document.getElementById('street').value.trim(),
              city: document.getElementById('city').value.trim(),
              state: document.getElementById('state').value.trim(),
              pincode: document.getElementById('pincode').value.trim(),
              phone: document.getElementById('phone-input').value.trim()
            };
          } else {
            const parts = document.getElementById('address').innerText.split(',');
            const phone = document.getElementById('phone').innerText.replace('Phone:', '').trim();
            const [state, pincode] = parts[3].split('-');
            address = {
              plotno: parts[0]?.trim(),
              street: parts[1]?.trim(),
              city: parts[2]?.trim(),
              state: state?.trim(),
              pincode: pincode?.trim(),
              phone
            };
          }
  
          try {
            const res = await fetch('/api/v1/user/payment', {
              method: 'POST',
              credentials: 'include',
              headers: { 'Content-Type': 'application/json' },
              body: JSON.stringify({ paymentMethod: 'COD', address })
            });
  
            if (res.ok) {
              window.location.href = '/api/v1/user/';
            } else {
              const err = await res.json();
              alert(`Order failed: ${err.message || 'Unknown error'}`);
            }
          } catch (err) {
            console.error(err);
            alert('Something went wrong while placing the order.');
          }
        });
      </script>
    </div>
  </body>
  